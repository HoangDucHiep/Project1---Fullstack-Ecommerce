services:
  # Api service for the ecommerce backend
  ecommercebackend.api:
    image: ecommercebackend-api
    container_name: ecommercebackend-api
    build:
      context: .
      dockerfile: API/EcommerceBackend.Api/Dockerfile
    environment:
      # Connection strings
      - ConnectionStrings__Database=${ConnectionStrings__Database}
      - ConnectionStrings__Cache=${ConnectionStrings__Cache}
      
      # Logging configurations
      - Serilog__WriteTo__1__Args__serverUrl=${Serilog__WriteTo__1__Args__serverUrl}
    ports:
       - ${API_HTTP_PORT}:${API_CONTAINER_HTTP_PORT}
       - ${API_HTTPS_PORT}:${API_CONTAINER_HTTPS_PORT}
    depends_on:
      - ecommercebackend.database.postgres
      - ecommercebackend.logging.seq
  
  # Database service for the ecommerce backend
  ecommercebackend.database.postgres:
    image: postgres:17
    container_name: ecommercebackend-database-postgres-17
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  # PgAdmin service for managing the Postgres database
  ecommercebackend.pgadmin:
    image: elestio/pgadmin:REL-9_6
    container_name: ecommercebackend-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_LOGIN_BANNER="EcommerceBackend Database Admin"
      - PGADMIN_CONFIG_SESSION_EXPIRATION_TIME=86400
    ports:
      - ${PGADMIN_PORT}:80
    depends_on:
      - ecommercebackend.database.postgres
    volumes:
      - ${PGADMIN_DATA_PATH}:/var/lib/pgadmin
  
  # Seq logging service
  ecommercebackend.logging.seq:
    image: datalust/seq:2025
    container_name: ecommercebackend-logging-seq-2025
    environment:
      - ACCEPT_EULA=${SEQ_ACCEPT_EULA}
      - SEQ_FIRSTRUN_NOAUTHENTICATION=${SEQ_FIRSTRUN_NOAUTHENTICATION}
    ports:
      - ${SEQ_API_PORT}:5341
      - ${SEQ_WEB_PORT}:80

  ecommercebackend.database.redis:
    image: redis:8.2.0
    container_name: ecommercebackend-database-redis
    volumes:
      - ${REDIS_DATA_PATH}:/data
    restart: always
    ports:
      - ${REDIS_PORT}:6379

  # Keycloak identity provider
  ecommercebackend.idprovider.keycloak:
    image: quay.io/keycloak/keycloak:26.3
    command: start --import-realm
    container_name: ecommercebackend-idprovider-keycloak
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://ecommercebackend.database.postgres:5432/${KEYCLOAK_DB}
      - KC_DB_USERNAME=${KEYCLOAK_DB_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HOSTNAME_URL=http://localhost:${KEYCLOAK_PORT}
    ports:
      - ${KEYCLOAK_PORT}:8080
    depends_on:
      ecommercebackend.database.postgres:
        condition: service_healthy
    volumes:
      - ./.containers/keycloak:/opt/keycloak/data
      - ./.file/ecommerce-realm-export.json:/opt/keycloak/data/import/ecommerce-realm-export.json:ro